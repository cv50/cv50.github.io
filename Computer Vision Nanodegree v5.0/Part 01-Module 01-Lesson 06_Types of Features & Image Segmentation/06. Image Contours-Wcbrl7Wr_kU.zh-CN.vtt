WEBVTT
Kind: captions
Language: zh-CN

00:00:00.440 --> 00:00:06.525
边缘检测算法常用于检测物体边界

00:00:06.525 --> 00:00:10.890
但检测出来的边缘往往不仅是物体边界

00:00:10.890 --> 00:00:15.605
还涉及一些有趣的特征和线条

00:00:15.605 --> 00:00:17.550
而要进行图像分割

00:00:17.550 --> 00:00:20.550
你要的只是那些完整的闭合边界

00:00:20.550 --> 00:00:23.839
因为这类边界能切实标识出特定的图像区域和物体

00:00:23.839 --> 00:00:27.583
图像描廓就可以实现这一点

00:00:27.583 --> 00:00:32.945
图像轮廓就是位于已知边界上的边缘所形成的连续曲线

00:00:32.945 --> 00:00:36.539
因此轮廓可用于图像分割

00:00:36.539 --> 00:00:40.515
能提供大量关于物体边界形状的信息

00:00:40.515 --> 00:00:43.304
在 OpenCV 里 如果物体是白色的 背景是黑色的

00:00:43.304 --> 00:00:46.500
那就可以得到最好的轮廓检测效果

00:00:46.500 --> 00:00:49.604
所以在识别图像轮廓之前

00:00:49.604 --> 00:00:52.500
我们要先为图像创建二进制阀值

00:00:52.500 --> 00:00:56.554
这样才能用黑白像素将图像里不同的物体区分开来

00:00:56.554 --> 00:01:00.780
然后我们用这些物体的边缘来形成轮廓

00:01:00.780 --> 00:01:05.129
这种二值图像通常只由一个阀值生成 如图

00:01:05.129 --> 00:01:07.594
或由 Canny 边缘检测器生成

00:01:07.594 --> 00:01:10.599
我们来具体讲一下这个简单的图像描廓案例

00:01:10.599 --> 00:01:14.294
这里我读取了一只手的图像 你之前也见过了

00:01:14.295 --> 00:01:16.260
手部识别实际上

00:01:16.260 --> 00:01:19.844
是计算机视觉如今面临的一个挑战 该应用十分实用

00:01:19.844 --> 00:01:25.500
比如 能帮助识别并解析手语 或能帮助识别不同的手势

00:01:25.500 --> 00:01:28.640
现在对这只手进行图像描廓处理

00:01:28.640 --> 00:01:31.108
首先 将图像转为灰度图像

00:01:31.108 --> 00:01:34.814
然后用逆二进制阀值 把手显示成白色

00:01:34.814 --> 00:01:38.834
而不是像之前一样让背景显示成白色 生成二值图像

00:01:38.834 --> 00:01:41.849
这个阀值要输入的参数有我们的灰度图像、

00:01:41.849 --> 00:01:45.819
要分离出来的白色像素值以及阀值逆转指令 以便将白色像素转为黑色像素

00:01:45.819 --> 00:01:49.419
将这个二值图像显示出来

00:01:49.420 --> 00:01:52.359
下一步 找到并画出轮廓

00:01:52.359 --> 00:01:53.634
要找出轮廓

00:01:53.634 --> 00:01:57.064
就用 CV 的函数 findContours

00:01:57.064 --> 00:01:59.355
该函数要输入的参数有我们的二值图像、

00:01:59.355 --> 00:02:03.659
轮廓检索模式 我这里用的是树模式

00:02:03.659 --> 00:02:06.679
以及轮廓近似方法 这里我就设为

00:02:06.680 --> 00:02:11.340
简单的链近似了 函数会输出轮廓列表和轮廓层级

00:02:11.340 --> 00:02:15.705
如果你有诸多轮廓彼此嵌套 那这个层级就能派上大用场

00:02:15.705 --> 00:02:17.790
层级定义了轮廓之间的关系

00:02:17.789 --> 00:02:20.734
详情请见文本

00:02:20.735 --> 00:02:25.740
得到了检测好的轮廓列表 就在图像副本上把这些轮廓显示出来

00:02:25.740 --> 00:02:27.209
要绘制轮廓

00:02:27.209 --> 00:02:30.844
就用 OpenCV 的函数 drawContours

00:02:30.844 --> 00:02:33.479
该函数要输入的参数有图像副本、

00:02:33.479 --> 00:02:36.938
轮廓列表以及要显示的轮廓

00:02:36.938 --> 00:02:39.419
 -1 指的是所有轮廓

00:02:39.419 --> 00:02:43.889
还要输入轮廓的颜色和大小

00:02:43.889 --> 00:02:49.404
这里我设为绿色的细线 将输出显示出来

00:02:49.405 --> 00:02:51.189
你可以看到有一个轮廓

00:02:51.189 --> 00:02:54.534
很好地将手的轮廓边界描绘了出来

00:02:54.534 --> 00:02:57.998
你还可以看到这形成了一个完整的闭合边界

00:02:57.998 --> 00:02:59.949
而且这里还将图像

00:02:59.949 --> 00:03:02.979
分成了前景 也即物体 和背景两部分

00:03:02.979 --> 00:03:04.629
利用这个轮廓

00:03:04.629 --> 00:03:09.354
我可以提取出大量有关这只手的形状信息

00:03:09.354 --> 00:03:10.764
包括手的面积、形状中心、

00:03:10.764 --> 00:03:14.364
周长以及外接矩形

00:03:14.365 --> 00:03:18.094
这些形状特征统称为轮廓特征

00:03:18.094 --> 00:03:20.800
接下来 你需要做些代码编写练习

00:03:20.800 --> 00:03:24.000
再学点轮廓特征的知识 了解轮廓特征实用的原因

