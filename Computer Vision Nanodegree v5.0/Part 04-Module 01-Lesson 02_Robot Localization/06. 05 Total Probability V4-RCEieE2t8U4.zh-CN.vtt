WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.645
假设有一个场景

00:00:03.645 --> 00:00:08.189
其中有个机器人 它不知道自己在哪

00:00:08.189 --> 00:00:11.088
我们用函数模拟此场景

00:00:11.089 --> 00:00:13.280
在这里画个图表

00:00:13.279 --> 00:00:18.210
垂直轴表示这个场景中

00:00:18.210 --> 00:00:20.850
任何位置的概率

00:00:20.850 --> 00:00:24.429
水平轴表示这个一维场景中的所有位置

00:00:24.429 --> 00:00:28.850
对于机器人目前认为自己所在的位置

00:00:28.850 --> 00:00:31.550
我用一个单值函数的模型来表示

00:00:31.550 --> 00:00:35.340
该函数为此场景中的每个潜在地点都分配相等的权重

00:00:35.340 --> 00:00:38.630
即最大迷惑状态

00:00:38.630 --> 00:00:42.460
要进行定位 这个场景必须具有一些独特的特征

00:00:42.460 --> 00:00:46.259
假设有三个不同的地标

00:00:46.259 --> 00:00:48.704
这里有道门

00:00:48.704 --> 00:00:53.034
这里有道门 这里是第三道门

00:00:53.034 --> 00:00:56.375
为了方便讲解 假设它们看起来都一样

00:00:56.375 --> 00:00:58.619
没有区别

00:00:58.619 --> 00:01:02.339
但是可以与非门区域区分开 例如墙壁

00:01:02.340 --> 00:01:07.460
我们看看机器人如何定位自己

00:01:07.459 --> 00:01:10.649
假设它能够感知 能感知自己站在门边

00:01:10.650 --> 00:01:15.370
它现在只知道自己可能位于门边

00:01:15.370 --> 00:01:18.055
这会如何影响到我们的信念？

00:01:18.055 --> 00:01:21.155
下面就要讲到很关键的定位步骤了

00:01:21.155 --> 00:01:24.189
如果你理解这一步 就理解定位了

00:01:24.189 --> 00:01:28.719
门的测量值将由潜在位置定义的信念函数

00:01:28.719 --> 00:01:32.164
转变成了一个新的函数

00:01:32.165 --> 00:01:33.780
看起来差不多是这样的

00:01:33.780 --> 00:01:37.019
对于靠近门的三个位置

00:01:37.019 --> 00:01:39.810
我们更加相信自己靠近这里

00:01:39.810 --> 00:01:44.189
而所有其他位置的信念降低了

00:01:44.189 --> 00:01:47.280
这是一个概率分布

00:01:47.280 --> 00:01:50.700
为靠近门的位置分配更高的概率

00:01:50.700 --> 00:01:57.810
称为后验信念 也就是在测量之后的信念

00:01:57.810 --> 00:02:02.579
这个信念的关键之处是我们依然不知道自己在哪

00:02:02.579 --> 00:02:05.170
有三个可能的位置

00:02:05.170 --> 00:02:06.989
实际上 传感器可能出错了

00:02:06.989 --> 00:02:09.984
我们不小心看到门 但实际上没有门

00:02:09.985 --> 00:02:14.780
但是依然有位于这些位置的残留概率

00:02:14.780 --> 00:02:20.240
这三个峰值共同表示了我们对所在位置的当前最佳信念

00:02:20.240 --> 00:02:27.344
这个表示法是概率和移动定位的绝对核心概念

00:02:27.344 --> 00:02:30.275
现在假设机器人移动了

00:02:30.275 --> 00:02:33.685
移动到右侧一定距离

00:02:33.685 --> 00:02:38.115
我们可以根据该动作调整信念

00:02:38.115 --> 00:02:40.650
看起来可能是这样的

00:02:40.650 --> 00:02:44.685
这个峰值移到了这里

00:02:44.685 --> 00:02:48.305
这个移到这里 这个移到这里

00:02:48.305 --> 00:02:51.540
很明显 机器人知道它的移动方向

00:02:51.539 --> 00:02:53.764
在这个示例中是往右侧移动

00:02:53.764 --> 00:02:56.524
大概知道移动了多远

00:02:56.525 --> 00:02:58.780
机器人动作不确定

00:02:58.780 --> 00:03:01.180
我们永远无法确定机器人移到哪了

00:03:01.180 --> 00:03:04.645
这些峰值变得稍微平坦些

00:03:04.645 --> 00:03:09.520
将这些信念往右移动的流程称为卷积

00:03:09.520 --> 00:03:13.060
现在假设机器人又开始感知了

00:03:13.060 --> 00:03:17.420
为了方便演示 假设它再次看到自己位于门边

00:03:17.419 --> 00:03:19.559
测量结果和之前一样

00:03:19.560 --> 00:03:22.810
现在是最神奇的时刻了

00:03:22.810 --> 00:03:27.770
我们将信念（现在在第二个测量结果之前）

00:03:27.770 --> 00:03:30.400
乘以一个函数 看起来像这样

00:03:30.400 --> 00:03:35.330
它在每个门那有一个峰值 结果看起来像这样

00:03:35.330 --> 00:03:40.695
有几个小的峰值 最大的峰值是这个

00:03:40.694 --> 00:03:48.219
对应的是先前的这个峰值 是这个先前结果中

00:03:48.219 --> 00:03:51.370
真正对应有门测量结果的位置

00:03:51.370 --> 00:03:55.944
所有其他有门的位置信念都很低

00:03:55.944 --> 00:03:59.229
因此 这个函数非常有趣

00:03:59.229 --> 00:04:01.299
它是一个分布 将大部分权重放在此处

00:04:01.300 --> 00:04:04.700
前提是机器人位于第二道门边的假设正确

00:04:04.699 --> 00:04:10.569
并且对远离门的位置信念很低

00:04:10.569 --> 00:04:14.134
此刻机器人定位到自己在哪了

00:04:14.134 --> 00:04:15.729
如果你理解了这一点

00:04:15.729 --> 00:04:19.894
就理解了概率和定位

00:04:19.894 --> 00:04:24.384
恭喜 你明白概率和定位了

00:04:24.384 --> 00:04:25.560
你可能还不知道

00:04:25.560 --> 00:04:27.699
但是这是理解我今天将在课堂上讲解的

00:04:27.699 --> 00:04:32.610
很多知识的核心概念

