WEBVTT
Kind: captions
Language: zh-CN

00:00:00.480 --> 00:00:05.589
在计算机视觉中 人们设计了很多算法来提取空间特征

00:00:05.589 --> 00:00:10.419
并利用图像梯度信息来识别物体

00:00:10.419 --> 00:00:15.745
其中一种技术叫做 HOG 也即方向梯度直方图

00:00:15.744 --> 00:00:19.589
方向梯度直方图听着太高深了

00:00:19.589 --> 00:00:22.565
我们先来讲一下这些术语

00:00:22.565 --> 00:00:27.120
直方图就是数据分布的一种图形表现

00:00:27.120 --> 00:00:30.535
看起来有点像柱形图 其柱形有不同的高度

00:00:30.535 --> 00:00:35.240
每个柱形代表一组处于一定值范围的数据

00:00:35.240 --> 00:00:41.070
这些柱形也称为组 柱形越高意味着某组数据越多

00:00:41.070 --> 00:00:43.649
以灰度图像为例

00:00:43.649 --> 00:00:48.810
假设你想绘制出这张薄饼图的强度数据直方图

00:00:48.810 --> 00:00:51.760
我们知道像素值的范围在 0 到 255 之间

00:00:51.759 --> 00:00:56.920
所以我们可以把这些值分成若干组

00:00:56.920 --> 00:01:02.275
我要创建 32 个组 每组包含 8 个像素值 所以第一组范围是 0 到 7、

00:01:02.274 --> 00:01:06.769
然后 8 到 15 以此类推一直到 248 到 255

00:01:06.769 --> 00:01:09.129
要创建直方图

00:01:09.129 --> 00:01:13.869
我们得来看看这张图里的各个像素值 将各像素值放到对应的组里

00:01:13.870 --> 00:01:16.585
这张图的薄饼里有很多亮值

00:01:16.584 --> 00:01:18.184
背景则很黑

00:01:18.185 --> 00:01:20.754
所以直方图看起来是这样的

00:01:20.754 --> 00:01:22.280
在这个直方图里 黑色像素明显堆积在一起

00:01:22.280 --> 00:01:25.480
这些是背景的像素

00:01:25.480 --> 00:01:27.340
这些像素都在这些低值范围里

00:01:27.340 --> 00:01:29.859
明亮的像素也聚集在一起

00:01:29.859 --> 00:01:32.635
基本上都在灰度值 200 左右

00:01:32.635 --> 00:01:35.680
这肯定是薄饼的大部分像素值

00:01:35.680 --> 00:01:39.280
看完灰度值的直方图

00:01:39.280 --> 00:01:42.400
我们来讲下一个术语 方向梯度

00:01:42.400 --> 00:01:47.075
方向很简单 指的就是图像梯度的方向或朝向

00:01:47.075 --> 00:01:49.810
我们已经讲了要怎么用 Sobel 算子来计算梯度的

00:01:49.810 --> 00:01:54.040
幅值和方向了

00:01:54.040 --> 00:01:55.829
把三个术语结合在一起

00:01:55.828 --> 00:01:59.904
HOG 就是指一张有关图像梯度方向的直方图

00:01:59.905 --> 00:02:02.650
首先 HOG 会接受一张图像

00:02:02.650 --> 00:02:04.780
如这张薄饼图 然后计算

00:02:04.780 --> 00:02:08.349
每个像素的梯度幅值和方向

00:02:08.349 --> 00:02:10.194
这其中蕴含的信息可不少

00:02:10.194 --> 00:02:12.189
所以 HOG 实际上会把这些像素

00:02:12.189 --> 00:02:17.859
分成若干个较大的正方形单元 单元大小通常是 8 乘 8 如果图片小一些 单元也就小一些

00:02:17.859 --> 00:02:19.554
如果是 8 乘 8 的单元

00:02:19.554 --> 00:02:22.210
那就有 64 个梯度值

00:02:22.210 --> 00:02:26.710
HOG 会计算每个单元相同的梯度方向有多少

00:02:26.710 --> 00:02:29.230
将这些梯度的幅值相加

00:02:29.229 --> 00:02:32.935
得到梯度强度

00:02:32.935 --> 00:02:37.210
接着 HOG 会把所有方向数据放到直方图里

00:02:37.210 --> 00:02:40.355
这个直方图有九组 也就是九个值范围

00:02:40.354 --> 00:02:43.935
不过你可以建立更多组来进一步分类数据

00:02:43.935 --> 00:02:48.354
这就是薄饼边缘的方向梯度直方图

00:02:48.354 --> 00:02:51.245
HOG 会对图像的每个单元进行同样的处理

00:02:51.245 --> 00:02:55.719
这个方向梯度直方图实际上就是个特征向量

00:02:55.719 --> 00:03:00.425
接下来 我们要用这些 HOG 特征来训练分类器

00:03:00.425 --> 00:03:06.090
思路就是对于物体相同但大小、方向不同的图像

00:03:06.090 --> 00:03:08.830
我们可以利用相同的 HOG 特征模式

00:03:08.830 --> 00:03:12.490
来检测物体 而不管物体的位置和呈现方式

00:03:12.490 --> 00:03:15.820
但我们先来看怎么用代码实现 HOG

00:03:15.819 --> 00:03:17.620
实现过程有好几步

00:03:17.620 --> 00:03:19.715
所以从这个例子开始 在接下来的几个例子中

00:03:19.715 --> 00:03:22.854
我都会在视频里讲解相关算法

00:03:22.854 --> 00:03:26.319
然后讲解代码并给出文本解释 以便你继续学习

