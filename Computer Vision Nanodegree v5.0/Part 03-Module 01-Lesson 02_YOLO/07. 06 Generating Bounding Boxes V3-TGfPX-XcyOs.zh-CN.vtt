WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.634
当 YOLO 看到一个用网格划分的图像时 如何查找正确的边界框？

00:00:05.634 --> 00:00:09.119
诀窍在于它将图像中一个对象的真实边界框

00:00:09.119 --> 00:00:13.434
仅分配给训练图像中的一个网格单元

00:00:13.435 --> 00:00:16.399
因此只有一个网格单元会定位图像

00:00:16.399 --> 00:00:18.979
如何选择这个网格单元？

00:00:18.980 --> 00:00:20.429
对于每个训练图像

00:00:20.429 --> 00:00:24.509
我们找到图像中每个对象的中点 然后将真实边界框

00:00:24.510 --> 00:00:29.255
分配给包含该中点的网格单元 我们来看一个示例

00:00:29.254 --> 00:00:30.939
在这个有人的图像中

00:00:30.940 --> 00:00:34.910
我们定位用黄色点表示的此人的中点

00:00:34.909 --> 00:00:37.794
这个点包含在一个网格单元中

00:00:37.795 --> 00:00:40.760
因此我们将真实边界框仅分配给这个网格单元

00:00:40.759 --> 00:00:44.000
这个网格单元的正确标注

00:00:44.000 --> 00:00:46.640
看起来将这样 该向量将用于训练

00:00:46.640 --> 00:00:51.344
虽然另一个网格单元也包含此人的一部分

00:00:51.344 --> 00:00:53.975
但是它的正确标注将看起来这样

00:00:53.975 --> 00:00:59.390
我们将其视作不包含对象 其 pc 值为 0

00:00:59.390 --> 00:01:03.230
我们来看看如何确定 x y w 和 h 的值

00:01:03.229 --> 00:01:06.894
在 YOLO 算法中

00:01:06.894 --> 00:01:11.269
x 和 y 确定的是边界框

00:01:11.269 --> 00:01:14.119
相对于网格单元的中心坐标

00:01:14.120 --> 00:01:17.825
w 和 h 确定的是边界框相对于整个图像的宽和高

00:01:17.825 --> 00:01:21.409
按惯例 网格单元的左上角坐标是 (0,0)

00:01:21.409 --> 00:01:27.094
或者右下角的坐标是 (1,1)

00:01:27.094 --> 00:01:28.689
因此 在这个示例中

00:01:28.689 --> 00:01:32.704
相对于网格单元坐标系的中心点为

00:01:32.704 --> 00:01:37.390
X 约等于 0.5 y 等于 0.3

00:01:37.390 --> 00:01:40.709
预测边界框的宽度 w 是 0.1

00:01:40.709 --> 00:01:44.339
因为它的宽度大约是整个图像宽度的 10%

00:01:44.340 --> 00:01:47.340
高度 h 是 0.4

00:01:47.340 --> 00:01:52.560
因为它的高度大约是整个图像高度的 40%

00:01:52.560 --> 00:01:55.019
注意 在这个体系中

00:01:55.019 --> 00:01:59.064
所有边界框坐标值都在 0 和 1 之间

00:01:59.064 --> 00:02:00.719
边界框的宽度和高度

00:02:00.719 --> 00:02:03.914
可以大于网格单元的大小

00:02:03.915 --> 00:02:06.930
这个技巧和标准化非常相似

00:02:06.930 --> 00:02:09.510
通过标准化这些值的范围

00:02:09.509 --> 00:02:13.689
这个算法变得更易于训练并收敛于更小的误差

00:02:13.689 --> 00:02:16.539
但是这个方法有一个问题

00:02:16.539 --> 00:02:19.989
假设有个网络在细小的网格上接受训练

00:02:19.990 --> 00:02:24.460
只有一个小的网格单元具有图像中对象的真实边界框

00:02:24.460 --> 00:02:27.129
如果这样的网络看到具有对象的新测试图像

00:02:27.129 --> 00:02:30.439
你认为会发生什么？

