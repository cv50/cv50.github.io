WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.609
为了加快在网络中运行测试图像

00:00:02.609 --> 00:00:05.939
并检测所有对象的速度

00:00:05.940 --> 00:00:09.380
我们需要缩短形成候选区域的时间

00:00:09.380 --> 00:00:12.630
为此 我们将用到 Faster R-CNN 架构

00:00:12.630 --> 00:00:16.750
Faster R-CNN 学会生成自己的候选区域

00:00:16.750 --> 00:00:18.789
它接受一个输入图像

00:00:18.789 --> 00:00:23.855
将图像传入 CNN 直到特定的卷积层 就像 Fast R-CNN 一样

00:00:23.855 --> 00:00:26.515
但是这次 它将生成的特征图

00:00:26.515 --> 00:00:29.635
作为输入传入单独的候选区域网络

00:00:29.635 --> 00:00:34.179
使用在网络中生成的特征预测自己的区域

00:00:34.179 --> 00:00:38.979
如果特征图中的某个区域检测到了大量边缘或其他特征

00:00:38.979 --> 00:00:41.524
则被识别为感兴趣区域

00:00:41.524 --> 00:00:45.519
然后 这个网络部分会快速进行二元分类

00:00:45.520 --> 00:00:49.810
对于每个感兴趣区域 它都会检测该区域是否包含对象

00:00:49.810 --> 00:00:52.640
如果包含 则该区域将继续经过分类步骤

00:00:52.640 --> 00:00:55.310
如果不包含

00:00:55.310 --> 00:00:57.245
则丢弃该建议

00:00:57.244 --> 00:00:59.695
获得最终候选区域后

00:00:59.695 --> 00:01:02.765
网络的剩余部分和 Fast R-CNN 看起来一样

00:01:02.765 --> 00:01:07.704
即接受特征图中的裁剪区域并学习分类这些区域

00:01:07.704 --> 00:01:11.239
通过消除非对象区域分析步骤

00:01:11.239 --> 00:01:15.399
这种模型是我们见过的所有区域 CNN 中最快速的模型

