WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.639
区域 CNN 的下个发展架构是 Fast R-CNN 架构

00:00:05.639 --> 00:00:10.644
这种架构使整个图像仅传入分类 CNN 一次

00:00:10.644 --> 00:00:15.719
而不是通过分类 CNN 单独处理每个感兴趣区域

00:00:15.720 --> 00:00:18.179
图像经过一系列卷积和池化层

00:00:18.179 --> 00:00:20.535
在这些层级之后

00:00:20.535 --> 00:00:22.539
是一个特征图堆栈

00:00:22.539 --> 00:00:27.314
我们依然需要识别感兴趣区域 但是我们将这些建议区域

00:00:27.315 --> 00:00:31.230
投射到更小的特征图层级上 而不是裁剪原始图像

00:00:31.230 --> 00:00:36.380
特征图中的每个区域对应于原始图像中更大的区域

00:00:36.380 --> 00:00:40.800
我们可以从该特征图中获取选定区域

00:00:40.799 --> 00:00:42.839
并将它们挨个地馈送到一个全连接层

00:00:42.840 --> 00:00:45.660
为每个不同区域生成一个类别

00:00:45.659 --> 00:00:49.000
在这种模式下 我们可以仅执行最耗时的步骤一次

00:00:49.000 --> 00:00:52.710
即通过一系列卷积层处理图像

00:00:52.710 --> 00:00:57.060
然后选择性地使用该特征图获得期望的输出

00:00:57.060 --> 00:01:00.750
同样 我们需要处理这些投射中不同大小的区域

00:01:00.750 --> 00:01:04.784
因为网络中更深的层级要求输入是固定大小

00:01:04.784 --> 00:01:08.715
因此 我们执行感兴趣区域池化流程

00:01:08.715 --> 00:01:12.750
将这些区域调整为固定大小 然后再馈送到全连接层中

00:01:12.750 --> 00:01:15.859
这个网络比 R-CNN 要快

00:01:15.859 --> 00:01:18.769
但是如果测试图像需要生成候选区域

00:01:18.769 --> 00:01:21.560
则速度依然很慢

00:01:21.560 --> 00:01:24.590
并且它依然会查看根本不包含对象的区域

00:01:24.590 --> 00:01:28.810
接下来 我们将了解一种可以改善这个区域生成步骤的架构

