WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.615
如果你向视频中的一组点应用光流法 而不是仅一个点

00:00:04.615 --> 00:00:06.720
结果会怎样？

00:00:06.719 --> 00:00:09.539
假设有一个机器人小图像

00:00:09.539 --> 00:00:12.724
机器人在下两个图像帧中往右移动 然后往下

00:00:12.724 --> 00:00:14.669
光流法的目标是

00:00:14.669 --> 00:00:16.000
对于每个图像帧

00:00:16.000 --> 00:00:19.980
根据图像强度（亮暗像素的模式）随时间推移的变化规律

00:00:19.980 --> 00:00:23.500
计算近似动作向量

00:00:23.500 --> 00:00:27.929
第一步是找到两个图像之间匹配的特征点

00:00:27.929 --> 00:00:32.549
采用的方法是查找匹配的强度规律的角点检测

00:00:32.549 --> 00:00:37.244
在此示例中 我们将直接检测机器人上的端点或传感器

00:00:37.244 --> 00:00:40.234
然后光流法针对第一个图像帧中的每个关键点

00:00:40.234 --> 00:00:43.094
计算动作向量 (u,v)

00:00:43.094 --> 00:00:46.799
指向在下个图像中可以找到该关键点的位置

00:00:46.799 --> 00:00:50.549
这些动作向量在帧 1 和 帧 2 之间指向右侧

00:00:50.549 --> 00:00:53.589
然后在帧 2 和 帧 3 之间指向右下角

00:00:53.590 --> 00:00:57.810
这就是对于一组点来说 光流法的效果

00:00:57.810 --> 00:01:02.140
你可以逐帧地计算光流 直到构建对象随时间推移的路径

00:01:02.140 --> 00:01:05.834
我们可以使用这些数据测量该对象的速度

00:01:05.834 --> 00:01:08.549
还可以将这种技巧应用到图像中的每个像素上

00:01:08.549 --> 00:01:11.454
创建一个动作向量场

00:01:11.454 --> 00:01:14.810
光流法用在了各种应用中

00:01:14.810 --> 00:01:18.185
包括慢动作图形和自动车辆导航

00:01:18.185 --> 00:01:22.040
当我们要定位在环境中移动的机器人时

00:01:22.040 --> 00:01:26.000
尤其要注意这些动作向量 因为它们特别有用

