WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.424
将所有这些信息结合到一起

00:00:02.424 --> 00:00:05.820
你会发现高斯分布中的所有这些可能性

00:00:05.820 --> 00:00:10.074
与这样的高斯分布相关联

00:00:10.074 --> 00:00:13.469
这是一个很有趣的二维高斯分布

00:00:13.470 --> 00:00:15.585
你应该好好思考下

00:00:15.585 --> 00:00:18.120
很明显 如果要将这个高斯不确定性

00:00:18.120 --> 00:00:21.745
投射到潜在位置空间

00:00:21.745 --> 00:00:23.595
我无法做出任何预测

00:00:23.594 --> 00:00:26.699
无法预测对象在哪

00:00:26.699 --> 00:00:29.114
因为我不知道速度

00:00:29.114 --> 00:00:33.339
此外 很明显 如果我将这个高斯分布投射到 ẋ 空间

00:00:33.340 --> 00:00:35.600
则不知道速度是多少

00:00:35.600 --> 00:00:41.219
一个观察值或一个预测不足以得出这种观察结果

00:00:41.219 --> 00:00:47.114
但是 我们知道位置与速度相关

00:00:47.115 --> 00:00:51.120
我移动的越快 位置越往右

00:00:51.119 --> 00:00:53.239
这个高斯分布呈现出了这种规律

00:00:53.240 --> 00:00:54.890
例如

00:00:54.890 --> 00:00:58.515
如果我知道速度是 2

00:00:58.515 --> 00:01:02.505
则根据该高斯分布 知道位置是 3

00:01:02.505 --> 00:01:04.200
这很神奇

00:01:04.200 --> 00:01:06.180
依然不知道自己在哪

00:01:06.180 --> 00:01:08.140
不知道移动速度是多少

00:01:08.140 --> 00:01:10.349
但是根据这个倾斜高斯分布

00:01:10.349 --> 00:01:12.489
充分了解了二者的关系

00:01:12.489 --> 00:01:14.969
为了理解这个规律的强大之处

00:01:14.969 --> 00:01:19.340
我们看看第二个观察值 即时间 t = 2

00:01:19.340 --> 00:01:21.780
这个观察值没有告诉我们任何速度信息

00:01:21.780 --> 00:01:25.480
只说明了位置信息

00:01:25.480 --> 00:01:28.170
要画高斯分布的话

00:01:28.170 --> 00:01:30.299
是这样的

00:01:30.299 --> 00:01:33.884
给出了位置信息 但是没有速度信息

00:01:33.885 --> 00:01:40.439
如果我将预测步骤的先验概率与测量概率相乘

00:01:40.439 --> 00:01:44.474
很神奇 我得出了这个高斯分布

00:01:44.474 --> 00:01:47.864
这个高斯分布很好地估算了

00:01:47.864 --> 00:01:52.274
我的速度是多少 并很好地估算了我的位置

00:01:52.275 --> 00:01:56.795
如果我根据该高斯分布预测未来一个时间步

00:01:56.795 --> 00:01:59.750
则发现自己在这里

00:01:59.750 --> 00:02:02.555
这正是这里的效果

00:02:02.555 --> 00:02:05.245
获得这样的高斯分布

00:02:05.245 --> 00:02:08.900
预测在这里 认真思考下

00:02:08.900 --> 00:02:12.715
这是卡尔曼滤波器原理的深入理解

00:02:12.715 --> 00:02:17.400
尤其是 我们只能观察一个变量

00:02:17.400 --> 00:02:22.560
我们能够对观察值相乘 推断另一个变量

00:02:22.560 --> 00:02:25.110
推理方式是

00:02:25.110 --> 00:02:27.750
有一组物理方程

00:02:27.750 --> 00:02:34.169
某个时间步之后的位置等于旧位置加上速度

00:02:34.169 --> 00:02:38.609
这组方程能够将后续测量值的约束条件

00:02:38.610 --> 00:02:43.470
反向传播到未观察的速度变量

00:02:43.469 --> 00:02:45.969
因此能够估算速度

00:02:45.969 --> 00:02:49.090
这是理解卡尔曼滤波器的关键

00:02:49.090 --> 00:02:55.240
对于理解 Google 无人驾驶汽车如何估算其他车的位置来说很关键

00:02:55.240 --> 00:03:00.629
使无人驾驶汽车能够做出预测 即使无法直接测量速度

00:03:00.629 --> 00:03:02.585
这是很重要的知识点

00:03:02.585 --> 00:03:04.849
卡尔曼滤波器的变量

00:03:04.849 --> 00:03:08.234
通常称为状态 因为状态反映了物理世界

00:03:08.235 --> 00:03:12.465
例如其他汽车在哪 移动速度是多少

00:03:12.465 --> 00:03:16.425
分为两个子集

00:03:16.425 --> 00:03:19.390
一个是可观察量 例如瞬间位置

00:03:19.389 --> 00:03:24.179
一个是隐藏量 在我们的示例中是我始终无法直接观察的速度

00:03:24.180 --> 00:03:26.685
但是因为这两者有关联性

00:03:26.685 --> 00:03:31.300
观察变量的后续观察值

00:03:31.300 --> 00:03:34.615
给出了这些隐藏变量的信息

00:03:34.615 --> 00:03:38.469
因此还可以估算这些隐藏变量是多少

00:03:38.469 --> 00:03:42.830
根据多个对象位置观察值

00:03:42.830 --> 00:03:46.475
我们可以估算移动速度是多少

00:03:46.474 --> 00:03:47.979
实际上所有不同的滤波器

00:03:47.979 --> 00:03:50.619
都是这种原理

00:03:50.620 --> 00:03:53.370
但是对于这样的问题来说

00:03:53.370 --> 00:03:54.795
卡尔曼滤波器计算起来非常高效

00:03:54.794 --> 00:03:58.079
因此通常会使用卡尔曼滤波器

