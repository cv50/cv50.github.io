{
  "data": {
    "lesson": {
      "id": 614934,
      "key": "0611cdc9-f154-47e2-b6c5-b518b0e9f628",
      "title": "Feedforward and Backpropagation",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Short introduction to neural networks: how they train by doing a feedforward pass then performing backpropagation.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": null,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/0611cdc9-f154-47e2-b6c5-b518b0e9f628/614934/1544453193689/Feedforward+and+Backpropagation+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/0611cdc9-f154-47e2-b6c5-b518b0e9f628/614934/1544453190077/Feedforward+and+Backpropagation+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 568702,
          "key": "619f8424-5c70-4e14-affe-7363296a41a3",
          "title": "Instructor",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "619f8424-5c70-4e14-affe-7363296a41a3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 568704,
              "key": "1ff3dfa7-f667-4118-ac50-05c3e1935eba",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/March/5ab03e86_screen-shot-2018-03-19-at-3.49.28-pm/screen-shot-2018-03-19-at-3.49.28-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1ff3dfa7-f667-4118-ac50-05c3e1935eba",
              "caption": "_Luis Serrano_",
              "alt": "",
              "width": 300,
              "height": 300,
              "instructor_notes": null
            },
            {
              "id": 568709,
              "key": "48121c06-f908-4cb5-8360-11fbbdf7f013",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Hello and welcome to **Introduction to Neural Networks**, given by Luis!\n\nLuis was formerly a Machine Learning Engineer at Google. He holds a PhD in mathematics from the University of Michigan, and a Postdoctoral Fellowship at the University of Quebec at Montreal.\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 308857,
          "key": "a3b18b18-8496-4775-af48-921ab35bd306",
          "title": "Why \"Neural Networks\"?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a3b18b18-8496-4775-af48-921ab35bd306",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791709,
              "key": "1a2e3319-7659-4df2-8563-46916b089cdc",
              "title": "为何是神经网络",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zAkzOZntK6Y",
                "china_cdn_id": "zAkzOZntK6Y.mp4"
              }
            }
          ]
        },
        {
          "id": 301716,
          "key": "7a42d26d-7d7e-4c76-a014-5bf8b4413179",
          "title": "Neural Network Architecture",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7a42d26d-7d7e-4c76-a014-5bf8b4413179",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 308895,
              "key": "f0c39c45-c729-4256-8996-709769d7ab61",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Neural Network Architecture\nOk, so we're ready to put these building blocks together, and build great Neural Networks! (Or Multi-Layer Perceptrons, however you prefer to call them.)\n\nThis first two videos will show us how to combine two perceptrons into a third, more complicated one.",
              "instructor_notes": ""
            },
            {
              "id": 436182,
              "key": "072f0f84-7559-4507-9188-ccb1dee67307",
              "title": "Combinando modelos",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Boy3zHVrWB4",
                "china_cdn_id": "Boy3zHVrWB4.mp4"
              }
            },
            {
              "id": 385226,
              "key": "155a9439-1b94-431c-8640-ebd0bc1d17bb",
              "title": "29 Neural Network Architecture 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "FWN3Sw5fFoM",
                "china_cdn_id": "FWN3Sw5fFoM.mp4"
              }
            },
            {
              "id": 395756,
              "key": "3dbaf35f-b389-4748-a2bb-f83282935f6b",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3dbaf35f-b389-4748-a2bb-f83282935f6b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Based on the above video, let's define the combination of two new perceptrons as w<sub>1</sub>\\*0.4 + w<sub>2</sub>*0.6 + b. Which of the following values for the weights and the bias would result in the final probability of the point to be 0.88?",
                "answers": [
                  {
                    "id": "a1505310098557",
                    "text": "w<sub>1</sub>: 2, w<sub>2</sub>: 6, b: -2",
                    "is_correct": false
                  },
                  {
                    "id": "a1505310111002",
                    "text": "w<sub>1</sub>: 3, w<sub>2</sub>: 5, b: -2.2",
                    "is_correct": true
                  },
                  {
                    "id": "a1505310112348",
                    "text": "w<sub>1</sub>: 5, w<sub>2</sub>: 4, b: -3",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 308896,
              "key": "e27b5551-e2ca-4787-b1f8-b81b15a1c3a6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Multiple layers\nNow, not all neural networks look like the one above. They can be way more complicated! In particular, we can do the following things:\n- Add more nodes to the input, hidden, and output layers.\n- Add more layers.\n\nWe'll see the effects of these changes in the next video.",
              "instructor_notes": ""
            },
            {
              "id": 321885,
              "key": "6f95b131-58ef-47ac-a6cc-c5ff1dd2cfac",
              "title": "Layers",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "pg99FkXYK0M",
                "china_cdn_id": "pg99FkXYK0M.mp4"
              }
            },
            {
              "id": 308897,
              "key": "2f0c10e3-6a0a-4388-aed1-d5176c78c245",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Multi-Class Classification\nAnd here we elaborate a bit more into what can be done if our neural network needs to model data with more than one output.",
              "instructor_notes": ""
            },
            {
              "id": 310924,
              "key": "c8815c6c-549a-4916-b989-1a46f02251ec",
              "title": "Multiclass Classification",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "uNTtvxwfox0",
                "china_cdn_id": "uNTtvxwfox0.mp4"
              }
            },
            {
              "id": 395757,
              "key": "13a2225e-cfa1-4a6d-8ae9-0d07ba978202",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "13a2225e-cfa1-4a6d-8ae9-0d07ba978202",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How many nodes in the output layer would you require if you were trying to classify all the letters in the English alphabet?",
                "matchers": [
                  {
                    "expression": "^[2][6]\\s*$"
                  },
                  {
                    "expression": "^[5][2]\\s*$"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 301718,
          "key": "02c36864-ee71-481c-bb01-a34c35bfc581",
          "title": "Feedforward",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "02c36864-ee71-481c-bb01-a34c35bfc581",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 308898,
              "key": "daef89a0-10d2-4857-8389-ef86f9416448",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Feedforward\nFeedforward is the process neural networks use to turn the input into an output. Let's study it more carefully, before we dive into how to train the networks.",
              "instructor_notes": ""
            },
            {
              "id": 461533,
              "key": "86f55e1d-d5d2-4cda-8a06-b623c25eade4",
              "title": "DL 41 Feedforward FIX V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hVCuvMGOfyY",
                "china_cdn_id": "hVCuvMGOfyY.mp4"
              }
            },
            {
              "id": 322621,
              "key": "5100ebef-9f25-4487-923f-d50462cd878e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Error Function\nJust as before, neural networks will produce an error function, which at the end, is what we'll be minimizing. The following video shows the error function for a neural network.",
              "instructor_notes": ""
            },
            {
              "id": 461532,
              "key": "3714806e-0318-4950-ae62-fd7fa6e3836c",
              "title": "DL 42 Neural Network Error Function (1)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SC1wEW7TtKs",
                "china_cdn_id": "SC1wEW7TtKs.mp4"
              }
            }
          ]
        },
        {
          "id": 301721,
          "key": "4cc13714-37d7-4705-a714-314ede5290b5",
          "title": "Backpropagation",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4cc13714-37d7-4705-a714-314ede5290b5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 308901,
              "key": "e6e62773-7797-4973-a353-0f77f19d6e17",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Backpropagation\nNow, we're ready to get our hands into training a neural network. For this, we'll use the method known as **backpropagation**. In a nutshell, backpropagation will consist of:\n- Doing a feedforward operation.\n- Comparing the output of the model with the desired output.\n- Calculating the error.\n- Running the feedforward operation backwards (backpropagation) to spread the error to each of the weights.\n- Use this to update the weights, and get a better model.\n- Continue this until we have a model that is good.\n\nSounds more complicated than what it actually is. Let's take a look in the next few videos. The first video will show us a conceptual interpretation of what backpropagation is.",
              "instructor_notes": ""
            },
            {
              "id": 322088,
              "key": "d81b8b53-d5b9-4955-a9f9-ec9a288f4715",
              "title": "Backpropagation V2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "1SmY3TZTyUk",
                "china_cdn_id": "1SmY3TZTyUk.mp4"
              }
            },
            {
              "id": 308902,
              "key": "d1463a38-3338-454a-8b85-fde047452d93",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Backpropagation Math\nAnd the next few videos will go deeper into the math. Feel free to tune out, since this part gets handled by Keras pretty well. If you'd like to go start training networks right away, go to the next section. But if you enjoy calculating lots of derivatives, let's dive in!\n\nIn the video below at 1:24, the edges should be directed to the sigmoid function and not the bias at that last layer; the edges of the last layer point to the bias currently which is incorrect.",
              "instructor_notes": ""
            },
            {
              "id": 321900,
              "key": "d04523fa-8341-429d-8b0c-0638e9de10d5",
              "title": "Calculating The Gradient 1 ",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tVuZDbUrzzI",
                "china_cdn_id": "tVuZDbUrzzI.mp4"
              }
            },
            {
              "id": 308903,
              "key": "940013b8-b419-46a0-beca-fa4456f4dc9e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Chain Rule\nWe'll need to recall the chain rule to help us calculate derivatives.",
              "instructor_notes": ""
            },
            {
              "id": 310925,
              "key": "b2f1f683-c75c-46cb-9796-8f13d2c941c5",
              "title": "Chain Rule",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "YAhIBOnbt54",
                "china_cdn_id": "YAhIBOnbt54.mp4"
              }
            },
            {
              "id": 462390,
              "key": "f8e117c4-4c38-467b-b271-45f437836fa3",
              "title": "DL 46 Calculating The Gradient 2 V2 (2)",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7lidiTGIlN4",
                "china_cdn_id": "7lidiTGIlN4.mp4"
              }
            },
            {
              "id": 394623,
              "key": "602f0d40-c473-442c-9b10-3d88987e0371",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Calculation of the derivative of the sigmoid function\nRecall that the sigmoid function has a beautiful derivative, which we can see in the following calculation. This will make our backpropagation step much cleaner.",
              "instructor_notes": ""
            },
            {
              "id": 394622,
              "key": "eb986cd9-a133-470f-b066-7e92b24c75e4",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2017/September/59b6ffad_sigmoid-derivative/sigmoid-derivative.gif",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/eb986cd9-a133-470f-b066-7e92b24c75e4",
              "caption": "",
              "alt": "",
              "width": 251,
              "height": 125,
              "instructor_notes": null
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}