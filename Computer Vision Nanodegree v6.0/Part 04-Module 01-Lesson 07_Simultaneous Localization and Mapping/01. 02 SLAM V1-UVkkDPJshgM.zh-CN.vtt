WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.710
大家好 我再讲解一些 SLAM 知识

00:00:02.710 --> 00:00:04.000
有很多人都在电子邮件和论坛里

00:00:04.000 --> 00:00:07.109
请求讲解 SLAM

00:00:07.110 --> 00:00:09.429
SLAM 是一种地图构建方法

00:00:09.429 --> 00:00:13.995
它是即时定位与地图构建的简称

00:00:13.994 --> 00:00:17.059
某些知识可能会出现在期末测验中

00:00:17.059 --> 00:00:19.094
请认真聆听

00:00:19.094 --> 00:00:22.964
地图构建是指构建环境地图

00:00:22.964 --> 00:00:25.484
你可能记得在定位课程中

00:00:25.484 --> 00:00:27.289
我们假定地图是给定的

00:00:27.289 --> 00:00:31.149
在我的生活当中 我最大的爱好之一是

00:00:31.149 --> 00:00:35.019
了解如何让机器人构建这些地图 例如这个地图

00:00:35.020 --> 00:00:37.000
它是一个三维地图

00:00:37.000 --> 00:00:44.244
描绘的是宾夕法尼亚州卡耐基梅隆大学附近的一座遗弃地下煤矿

00:00:44.244 --> 00:00:46.659
在过去的 10 年间内

00:00:46.659 --> 00:00:50.259
我研究了大量不同的地图构建方法

00:00:50.259 --> 00:00:54.739
这些方法非常复杂 例如这个柱式开采法

00:00:54.740 --> 00:00:59.079
所有这些方法都有个共同点 我们会构建一个环境模型

00:00:59.079 --> 00:01:03.364
并且机器人本身在移动时有不确定性

00:01:03.365 --> 00:01:05.189
在这个示例中

00:01:05.189 --> 00:01:07.049
这里形成了一个循环

00:01:07.049 --> 00:01:11.969
可以看出 我们的地图构建技术能够解决这个问题

00:01:11.969 --> 00:01:17.385
并得出一个一致的地图 虽然机器人本身偏离轨道了

00:01:17.385 --> 00:01:20.940
构建地图的关键之处是

00:01:20.939 --> 00:01:26.234
机器人本身可能不知道自己在哪 因为它具有运动不确定性

00:01:26.234 --> 00:01:29.310
在定位方法中 我们使用现有地图解决了这一问题

00:01:29.310 --> 00:01:32.530
但是现在没有现有地图了 我们要构建地图

00:01:32.530 --> 00:01:34.650
这时候就要用到 SLAM 技术了

00:01:34.650 --> 00:01:38.280
SLAM 并不是说要拍打机器人

00:01:38.280 --> 00:01:42.674
它实际上是指即时定位与地图构建

00:01:42.674 --> 00:01:44.310
这是一个很广泛很广泛的

00:01:44.310 --> 00:01:45.879
研究领域

00:01:45.879 --> 00:01:49.810
我的大部分 AI 图书都是围绕这一技术展开的

00:01:49.810 --> 00:01:53.810
今天 我要展示下我最喜欢的方法 叫做 GraphSLAM

00:01:53.810 --> 00:01:57.420
也是到目前为止最容易理解的方法

00:01:57.420 --> 00:02:00.420
我们将地图构建问题简化为

00:02:00.420 --> 00:02:06.400
收集几个非常直观的条件 并变成很大的矩阵和向量 就这么简单

