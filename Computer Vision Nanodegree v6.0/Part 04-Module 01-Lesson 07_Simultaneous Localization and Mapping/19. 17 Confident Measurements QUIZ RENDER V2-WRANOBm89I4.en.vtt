WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.685
I'm going to give you a glimpse as to why it works.

00:00:02.685 --> 00:00:06.200
Suppose we have two roller positions x0 and

00:00:06.200 --> 00:00:10.560
x1 and we know that 10-apart with some Gaussian noise,

00:00:10.560 --> 00:00:13.560
we know that the Gaussian noise and exploitation

00:00:13.560 --> 00:00:17.065
moves thr rightward position 10-off the leftward position,

00:00:17.065 --> 00:00:18.609
but there is some uncertainty.

00:00:18.609 --> 00:00:21.704
When we talked about common filters,

00:00:21.704 --> 00:00:26.054
we talked about Gaussians and this uncertainty might look as follows.

00:00:26.054 --> 00:00:33.134
There is a constant, exponential in the expression that x1 minus x0 should relax to 10,

00:00:33.134 --> 00:00:34.820
but might deviate from it.

00:00:34.820 --> 00:00:38.774
This Gaussian constraint over here characterizes a constraint x1,

00:00:38.774 --> 00:00:42.420
x0 and wishes them to be exactly 10-apart.

00:00:42.420 --> 00:00:46.545
The Gaussian is maximum with this equation is fulfilled,

00:00:46.545 --> 00:00:49.980
but if the residual is not equals zero,

00:00:49.979 --> 00:00:52.509
there's still a probability associated with it.

00:00:52.509 --> 00:00:54.780
Let's now model a second motion.

00:00:54.780 --> 00:00:57.365
Say x2 is five apart.

00:00:57.365 --> 00:01:00.960
We now get an even bigger Gaussian relative to the very first one,

00:01:00.960 --> 00:01:04.049
but the local constraint over here reads just like the constraint over there.

00:01:04.049 --> 00:01:05.590
So, let me just write it down.

00:01:05.590 --> 00:01:10.480
x2 minus x1 minus five square over sigma square.

00:01:10.480 --> 00:01:13.200
Now, the total probability of

00:01:13.200 --> 00:01:16.894
this entire thing over here is the product of these two things.

00:01:16.894 --> 00:01:19.000
If we want to maximize the product,

00:01:19.000 --> 00:01:21.224
we can play a number of interesting tricks.

00:01:21.224 --> 00:01:24.839
First, the constant has no bearing on the maximum,

00:01:24.840 --> 00:01:26.290
just on the absolute value.

00:01:26.290 --> 00:01:29.734
So, if we want to find the best values for x0 and x1 and so on,

00:01:29.734 --> 00:01:31.584
we can drop the constant.

00:01:31.584 --> 00:01:34.029
Secondly, we can drop the

00:01:34.030 --> 00:01:38.435
exponential if we're willing to turn the product into an addition,

00:01:38.435 --> 00:01:43.280
and remember, we edit things in omega and in sigma, that's why.

00:01:43.280 --> 00:01:45.590
And finally, we can actually drop the minus a half.

00:01:45.590 --> 00:01:49.150
Turns out it also plays no role in the maximization of this expression.

00:01:49.150 --> 00:01:51.550
So, it turns out what you added,

00:01:51.549 --> 00:01:54.864
where constraints just like these and you even

00:01:54.864 --> 00:01:58.269
added them as a certain strength of one over sigma square.

00:01:58.269 --> 00:02:02.769
In particular, if you really believe that a constraint is true,

00:02:02.769 --> 00:02:07.679
you should add a larger value in this matrix over here and on the right side,

00:02:07.680 --> 00:02:11.004
you should multiply the right constraint with an even larger value.

00:02:11.004 --> 00:02:15.569
For definitely, taking the expression like this and multiplying the sigma square,

00:02:15.569 --> 00:02:18.509
you get something of this nature over here where one over

00:02:18.509 --> 00:02:22.435
sigma regulates how confident you are for a small sigma,

00:02:22.435 --> 00:02:23.920
one over sigma becomes large,

00:02:23.919 --> 00:02:25.759
so five is much larger than one.

00:02:25.759 --> 00:02:27.719
That means you have much more confidence.

00:02:27.719 --> 00:02:30.539
Let's go back to the code and modify the code.

00:02:30.539 --> 00:02:33.780
So, the last measurement has a really high confidence.

00:02:33.780 --> 00:02:37.289
So, I wanted to multiply the last measurement between

00:02:37.289 --> 00:02:41.959
x2 and our landmark with the factor of five, in your code.

